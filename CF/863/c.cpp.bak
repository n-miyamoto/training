
/*
#include <stdio.h>
#include <iostream>
#include <algorithm>

using namespace std;
#define BUF (1000)

int  a,b;
long long k;
int A[3][3];
int B[3][3];

void input(void){
	cin >> k >> a >> b;
	for(int i=0;i<3;i++){
		for(int j=0;j<3;j++){
			cin >> A[i][j];
		}
	}	

	for(int i=0;i<3;i++){
		for(int j=0;j<3;j++){
			cin >> B[i][j];
		}
	}	
}

void show(void){
	cout << k << a << b << endl;
	for(int i=0;i<3;i++){
		for(int j=0;j<3;j++){
			cout << A[i][j] << endl;
		}
	}	

	for(int i=0;i<3;i++){
		for(int j=0;j<3;j++){
			cout << B[i][j] << endl;
		}
	}	

}

int judge(int a, int b){
	if(a==b){
		return 0;
	}
	if(a==1 && b==2) return  0;
	if(a==1 && b==3) return  1;
	if(a==2 && b==1) return  1;
	if(a==2 && b==3) return  0;
	if(a==3 && b==1) return  0;
	if(a==3 && b==2) return  1;
}
int main(void){
	input();
//	show();
	int f[10],ap[10],bp[10];
	for(int i=0;i<10;i++){
		f[i]=-1;
		ap[i]=0;
		bp[i]=0;
	}

	int s=0;
	int n;
	int t=0;
	int a_ = a;
	int b_ = b;
	for(int i=0;i<10;i++){
		s = 3*a_+b_-4;
		ap[i] = judge(a_,b_);
		bp[i] = judge(b_,a_);	
		if(f[s]==-1){
			f[s]=i;
		}else{
			n=i;
			t=i-f[s];
			break;
		}
		int at = a_;
		int bt = b_;
		a_=A[at-1][bt-1];
		b_=B[at-1][bt-1];
	}

	if(t==0){
	}
	cout << n << "t" << t << endl;

	long long ali=0;
	long long bob=0;
	int a_i,b_i,a_t,b_t;
	for(int i=0;i<9;i++){
		ali+=ap[i];
		bob+=bp[i];
		if(i==n-t-1){
			a_i=ali;
			b_i=bob;
		}else if(i==n-1){
			a_t = ali;
			b_t = bob;
			break;
		}		
	}

	a_t -= a_i;
	b_t -= b_i;
	//for(int i=0;i<9;i++) cout << ap[i] << bp[i];
//	cout << a_i << b_i << a_t << b_t << endl;

	long long l;
	int mod;
	if(t!=0){
		l = (long long)(k-n+t)/(long long)t;
		mod = (int)((long long)(k-n+t)%(long long)t);
	}else{
		l=0;
		mod = 0;
	}

//	cout << l << mod << endl;
//	cout << a_ << b_ << endl;
	int a_m=0;
	int b_m=0;	
	for(int i=0;i<mod;i++){
		a_m+=judge(a_,b_);
		b_m+=judge(b_,a_);

		int at = a_;
		int bt = b_;
		a_=A[at-1][bt-1];
		b_=B[at-1][bt-1];
	}

	ali=a_i + l*a_t+a_m;
	bob=b_i + l*b_t+b_m;
	//cout << k << l;
	cout << ali << " "<< bob << endl;
	return 0;
}
*/